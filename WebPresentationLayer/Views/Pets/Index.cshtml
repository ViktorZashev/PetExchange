@{
	ViewData["Title"] = "Pets";
	var pets = (List<Pet>)ViewBag.Pets;
	var filters = (List<FilterGroup>)ViewBag.Filters;
	var currentPage = (int)ViewBag.Page;
	var pageSize = 8;
}
<div class="container">
	<div class="card-list">
		<div class="row">
			<div class="col-12 col-md-4 col-lg-3 col-xl-3 col-xxl-2">
				@await Component.InvokeAsync("PetFilters", new { filters = filters })
			</div>
			<div class="col-12 col-md-8 col-lg-9 col-xl-9 col-xxl-10">
				<div class="row">
					@if(pets.Count == 0)
					{
						<div class="mb-3">
							Няма домашни любимци отговарящи на критериите!
						</div>
					}
					@foreach (var pet in pets)
					{
						<div class="col-12 col-md-6 col-lg-4 col-xl-3 pb-4">
							@await Component.InvokeAsync("PetCard", new { pet = pet })
						</div>
					}
				</div>
				<nav>
					<ul class="pagination mb-0">
						<li class="page-item @(currentPage == 1 ? "disabled" : "")">
							<a href="@ViewBag.PrevPageUrl" class="page-link" data-type="previous">Назад</a>
						</li>
						<li class="page-item @(pets.Count < pageSize ? "disabled" : "")">
							<a href="@ViewBag.NextPageUrl" class="page-link" data-type="next">Напред</a>
						</li>
					</ul>
				</nav>
			</div>
		</div>
	</div>
</div>
